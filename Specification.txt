Junior’s QA Pet project (SPA)

<link hier>

Requirements

Размещение

    GitHub + Render

Функциональность для тестирования

1. UI / UX функционал

    1.1 Формы

        Логин / Регистрация (валидация, SQL-инъекции, проверка обязательных полей).

        Поиск с автодополнением (API-запросы, throttling).

        Профиль пользователя (редактирование, загрузка аватарки, предпросмотр).

    1.2 Динамические списки

        Пагинация / Бесконечный скролл (кэширование, нагрузка).

        Сортировка и фильтрация (параметры запросов).

        Удаление / добавление элементов (CRUD, транзакции БД).

    1.3 Модальные окна и уведомления

        Toast-сообщения (таймауты, очередь).

        Подтверждение действий (например, удаление).

        Форма в модалке (фокус, accessibility).

    1.4 Состояния загрузки

        Скелетоны / Лоадеры (задержка API).

        Обработка ошибок (404, 500, нет сети).

        Оптимизированные запросы (дебаунс, отмена).

    1.5 Навигация

        Роутинг (SPA-переходы, защищённые маршруты).

        Хлебные крошки (история навигации).

        Якорные ссылки (скролл к элементам).

2. API

    2.1 Основные операции

        CRUD-эндпоинты с REST-стандартами.

        Ответы с корректными HTTP-кодами.

    2.2 Дополнительно

        Запросы с параметрами (Query/String, Headers).

        Кэширование данных (ETag, LocalStorage).

        Ошибки API (статусы 4xx/5xx, ретраи).

    2.3 Безопасность API

        Публичные и защищённые эндпоинты (JWT-аутентификация).

        Проверка авторизации при доступе к приватным данным.

3. Безопасность

        CSRF-токены в формах.

        XSS-фильтрация (попытка вставить скрипты).

        SQL-инъекции (на тестовом окружении).

        Логирование действий (аудит изменений).

4. База данных

        Отображение актуальных данных в UI.

        Консистентность после действий (например, удаление).

        Оптимизация запросов (избегание N+1 problem).

5. Нефункциональные возможности

    5.1 Нагрузка

        Множественные параллельные запросы.

        Долгие операции (таймауты, отмена).

        Лимиты API (rate limiting).

    5.2 Адаптивность

        Мобильная и планшетная версия.

        Тёмная и светлая темы.

        Локализация (RU / EN).

    5.3 Логирование

        Лог ошибок фронтенда (JS error tracking).

        Лог запросов на сервере.

        Возможность скачивания логов (тест HTTPS и работы с файлами).

Стэк:
    - HTML, CSS, JavaScript, Python (Flask)
    - GitHub для хранения репозитория
    - Render для деплоя, БД (Postgres)

