import psycopg2
from sqlalchemy import create_engine, text

# URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ Render
DATABASE_URL = "postgresql://flask_db_postgres_user:yi2RNn9HoOREs1US9ZH5mjXBMrvnJCx2@dpg-d2attlje5dus73c18f70-a.frankfurt-postgres.render.com/flask_db_postgres"

print("üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ —Ç–∞–±–ª–∏—Ü—É users...")

try:
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SQLAlchemy
    engine = create_engine(DATABASE_URL)
    
    with engine.connect() as conn:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ –ø–æ–ª—è email –∏ password_hash
        result = conn.execute(text("""
            SELECT column_name 
            FROM information_schema.columns 
            WHERE table_name = 'users' 
            AND column_name IN ('email', 'password_hash')
        """))
        
        existing_columns = [row[0] for row in result]
        print(f"üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {existing_columns}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ email, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if 'email' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ email...")
            conn.execute(text("ALTER TABLE users ADD COLUMN email VARCHAR(120) UNIQUE"))
            print("‚úÖ –ü–æ–ª–µ email –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        else:
            print("‚úÖ –ü–æ–ª–µ email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ password_hash, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if 'password_hash' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ password_hash...")
            conn.execute(text("ALTER TABLE users ADD COLUMN password_hash VARCHAR(255)"))
            print("‚úÖ –ü–æ–ª–µ password_hash –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        else:
            print("‚úÖ –ü–æ–ª–µ password_hash —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        conn.commit()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        print("\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users:")
        result = conn.execute(text("""
            SELECT column_name, data_type, is_nullable, column_default
            FROM information_schema.columns 
            WHERE table_name = 'users'
            ORDER BY ordinal_position
        """))
        
        for row in result:
            print(f"   - {row[0]}: {row[1]} (nullable: {row[2]}, default: {row[3]})")
        
        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
