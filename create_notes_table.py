import psycopg2
from sqlalchemy import create_engine, text

# URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ Render
DATABASE_URL = "postgresql://flask_db_postgres_user:yi2RNn9HoOREs1US9ZH5mjXBMrvnJCx2@dpg-d2attlje5dus73c18f70-a.frankfurt-postgres.render.com/flask_db_postgres"

print("üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã notes...")

try:
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ SQLAlchemy
    engine = create_engine(DATABASE_URL)
    
    with engine.connect() as conn:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ notes
        result = conn.execute(text("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_name = 'notes'
        """))
        
        if result.fetchone():
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ notes —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print("‚ûï –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É notes...")
            conn.execute(text("""
                CREATE TABLE notes (
                    id SERIAL PRIMARY KEY,
                    title VARCHAR(100) NOT NULL,
                    content TEXT NOT NULL,
                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    user_id INTEGER NOT NULL REFERENCES users(id) ON DELETE CASCADE,
                    status VARCHAR(20) DEFAULT 'active'
                )
            """))
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ notes —Å–æ–∑–¥–∞–Ω–∞")
        
        conn.commit()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        print("\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã notes:")
        result = conn.execute(text("""
            SELECT column_name, data_type, is_nullable, column_default
            FROM information_schema.columns 
            WHERE table_name = 'notes'
            ORDER BY ordinal_position
        """))
        
        for row in result:
            print(f"   - {row[0]}: {row[1]} (nullable: {row[2]}, default: {row[3]})")
        
        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
